import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.Reader;

import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVRecord;


public class RateCalculator {
	
	public static void main(String[] args) {
		
		Parcel parcel = new Parcel("H2X1T3", "H2X1T3", 10f,10f,10f,10f);
		parcel.setType(Parcel.Type.XPRESS);
		csvLookUp(parcel);
	}


	public float calculateRate(Parcel parcel) {

		return 0f;
	}

	public static void csvLookUp(Parcel parcel) {
		Reader in;
		String tableName = "";
		if (parcel.getType().toString() == "XPRESS") {
			tableName = "Xpresspost.csv";	
		}
		if (parcel.getType().toString() == "REGULAR") {
			tableName = "Regular.csv";	
		}
		if (parcel.getType().toString() == "PRIORITY") {
			tableName = "Priority.csv";	
		}
		try {
			in = new BufferedReader(new FileReader("Postal-Tables/" + tableName));
			Iterable<CSVRecord> records;
			try {
				records = CSVFormat.RFC4180.withFirstRecordAsHeader().parse(in);
				for (CSVRecord record : records) {
					float volume = 0f;
					if(record.get("Volumetric Equivalent") != "Over 30") {
						volume = Float.parseFloat(record.get("Volumetric Equivalent"));
					}
					String codeMatch = record.get(parcel.getSourcePostalCode().substring(0,2));
					System.out.println(volume + ": " + codeMatch);
				}
			} catch (IOException e) {
				e.printStackTrace();
			}
		} catch (FileNotFoundException e1) {
			e1.printStackTrace();
		}
	}
}
